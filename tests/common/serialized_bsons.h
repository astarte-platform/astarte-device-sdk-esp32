/**
 * This file is part of Astarte.
 *
 * Copyright 2018-2023 SECO Mind Srl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: LGPL-2.1-or-later OR Apache-2.0
 *
 **/

#ifndef _SERIALIZED_BSON_H_
#define _SERIALIZED_BSON_H_

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

const uint8_t serialized_bson_empty_document[] = { 0x05, 0x00, 0x00, 0x00, 0x00 };

// Complete BSON corresponds to:
// {
//     "element double": 42.3,
//     "element string": "hello world",
//     "element binary": b'bin encoded string',
//     "element bool false": False,
//     "element bool true": True,
//     "element UTC datetime": datetime.now(timezone.utc),
//     "element int32":10,
//     "element int64":17179869184,
//     "element double array": [10.32, 323.44],
//     "element string array": ["hello", "world"],
//     "element binary array": [b'a', b'a', b'cd'],
//     "element bool array": [False, True],
//     "element UTC datetime array": [datetime.now(timezone.utc)],
//     "element int32 array": [342, 532, -324, 4323],
//     "element int64 array": [-(2**32 + 2845), (2**32 + 854795484), (2**32 + 11), (2**32 + 654)],
// }

const uint8_t serialized_bson_complete_document[] = { 0x3b, 0x02, 0x00, 0x00, 0x01, 0x65, 0x6c,
    0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x00, 0x66, 0x66, 0x66,
    0x66, 0x66, 0x26, 0x45, 0x40, 0x02, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74,
    0x72, 0x69, 0x6e, 0x67, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77,
    0x6f, 0x72, 0x6c, 0x64, 0x00, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x62, 0x69,
    0x6e, 0x61, 0x72, 0x79, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x62, 0x69, 0x6e, 0x20, 0x65, 0x6e,
    0x63, 0x6f, 0x64, 0x65, 0x64, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x08, 0x65, 0x6c, 0x65,
    0x6d, 0x65, 0x6e, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x00,
    0x00, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x74,
    0x72, 0x75, 0x65, 0x00, 0x01, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x55, 0x54,
    0x43, 0x20, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x00, 0x3e, 0x20, 0x93, 0x9f, 0x88,
    0x01, 0x00, 0x00, 0x10, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x33,
    0x32, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x12, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x69,
    0x6e, 0x74, 0x36, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x65, 0x6c,
    0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x20, 0x61, 0x72, 0x72,
    0x61, 0x79, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x01, 0x30, 0x00, 0xa4, 0x70, 0x3d, 0x0a, 0xd7, 0xa3,
    0x24, 0x40, 0x01, 0x31, 0x00, 0xd7, 0xa3, 0x70, 0x3d, 0x0a, 0x37, 0x74, 0x40, 0x00, 0x04, 0x65,
    0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x72,
    0x72, 0x61, 0x79, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x02, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x68,
    0x65, 0x6c, 0x6c, 0x6f, 0x00, 0x02, 0x31, 0x00, 0x06, 0x00, 0x00, 0x00, 0x77, 0x6f, 0x72, 0x6c,
    0x64, 0x00, 0x00, 0x04, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x62, 0x69, 0x6e, 0x61,
    0x72, 0x79, 0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, 0x30, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x61, 0x05, 0x31, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x61, 0x05,
    0x32, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x63, 0x64, 0x00, 0x04, 0x65, 0x6c, 0x65, 0x6d, 0x65,
    0x6e, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x00, 0x0d, 0x00,
    0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x08, 0x31, 0x00, 0x01, 0x00, 0x04, 0x65, 0x6c, 0x65, 0x6d,
    0x65, 0x6e, 0x74, 0x20, 0x55, 0x54, 0x43, 0x20, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
    0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x00, 0x10, 0x00, 0x00, 0x00, 0x09, 0x30, 0x00, 0x5b, 0x99,
    0x1a, 0xd8, 0x88, 0x01, 0x00, 0x00, 0x00, 0x04, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
    0x69, 0x6e, 0x74, 0x33, 0x32, 0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x00, 0x21, 0x00, 0x00, 0x00,
    0x10, 0x30, 0x00, 0x56, 0x01, 0x00, 0x00, 0x10, 0x31, 0x00, 0x14, 0x02, 0x00, 0x00, 0x10, 0x32,
    0x00, 0xbc, 0xfe, 0xff, 0xff, 0x10, 0x33, 0x00, 0xe3, 0x10, 0x00, 0x00, 0x00, 0x04, 0x65, 0x6c,
    0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x20, 0x61, 0x72, 0x72, 0x61,
    0x79, 0x00, 0x31, 0x00, 0x00, 0x00, 0x12, 0x30, 0x00, 0xe3, 0xf4, 0xff, 0xff, 0xfe, 0xff, 0xff,
    0xff, 0x12, 0x31, 0x00, 0xdc, 0x24, 0xf3, 0x32, 0x01, 0x00, 0x00, 0x00, 0x12, 0x32, 0x00, 0x0b,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x33, 0x00, 0x8e, 0x02, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00 };

#ifdef __cplusplus
}
#endif

#endif // _SERIALIZED_BSON_H_
